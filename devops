#!/usr/bin/env bash

set -euo pipefail

function install() {
    ENV=${1:-local}
        cp docker/overrides/docker-compose.${ENV}.yml  docker-compose.yml || true
        cp .env.example                        .env       || true
        cp .env.example                        .env       || true

    if [ $ENV == 'local' ]; then
      docker-compose build

      composer install --prefer-dist
      migrate
    fi
}

# -----------------

function migrate() {
    run -u www-data app php artisan migrate $@
}

function fresh() {
    run -u www-data app php artisan migrate:fresh --drop-views $@
}

function clear_all() {
    run -u www-data app php artisan config:clear
    run -u www-data app php artisan cache:clear
    run -u www-data app php artisan route:clear
}

# -----------------

function test() {
    run -u www-data app-test php artisan optimize:clear --env=testing
    run -u www-data app-test php artisan test           --env=testing $@
}

function test_fast() {
    run -u www-data app ./vendor/bin/phpunit --order-by=defects $@
}

# -----------------

function composer() {
    run -u www-data app composer $@
}

function artisan() {
    run -u www-data app php artisan $@
}

function art() {
    artisan $@
}

# -----------------

function run() {
    docker-compose run --rm --entrypoint= $@
}

function shell() {
  WHAT=${1:-app}
  docker-compose exec -u www-data $WHAT bash
}

function help() {
  echo "Usage: $0 [task] <args...>" && compgen -A function | grep -v '^_' | cat -n
}

function stress_test_page() {
    siege -c $1 -b -r 10 -f url.txt --log=./siege-$1.log
}

function stress() {
    siege -c 100 http://127.0.0.1/load
}

function init() {
    docker-compose down -v
    rm -rf ./.infra/mysql/master/data/*
    rm -rf ./.infra/mysql/slave/data/*
    rm -rf ./.infra/mysql/slave_2/data/*
    docker-compose build
    docker-compose up -d

    until docker exec mysql_master sh -c 'export MYSQL_PWD=111; mysql -u root -e ";"'
    do
        echo "Waiting for mysql_master database connection..."
        sleep 4
    done

#   first slave

    priv_stmt='CREATE USER "mydb_slave_user"@"%" IDENTIFIED BY "mydb_slave_pwd"; GRANT REPLICATION SLAVE ON *.* TO "mydb_slave_user"@"%"; FLUSH PRIVILEGES;'
    docker exec mysql_master sh -c "export MYSQL_PWD=111; mysql -u root -e '$priv_stmt'"

    until docker-compose exec mysql_slave sh -c 'export MYSQL_PWD=111; mysql -u root -e ";"'
    do
        echo "Waiting for mysql_slave database connection..."
        sleep 4
    done

    MS_STATUS=`docker exec mysql_master sh -c 'export MYSQL_PWD=111; mysql -u root -e "SHOW MASTER STATUS"'`
    CURRENT_LOG=`echo $MS_STATUS | awk '{print $6}'`
    CURRENT_POS=`echo $MS_STATUS | awk '{print $7}'`

    start_slave_stmt="CHANGE MASTER TO MASTER_HOST='mysql_master',MASTER_USER='mydb_slave_user',MASTER_PASSWORD='mydb_slave_pwd',MASTER_LOG_FILE='$CURRENT_LOG',MASTER_LOG_POS=$CURRENT_POS,GET_MASTER_PUBLIC_KEY=1; START SLAVE;"
    start_slave_cmd='export MYSQL_PWD=111; mysql -u root -e "'
    start_slave_cmd+="$start_slave_stmt"
    start_slave_cmd+='"'
    docker exec mysql_slave sh -c "$start_slave_cmd"

    docker exec mysql_slave sh -c "export MYSQL_PWD=111; mysql -u root -e 'SHOW SLAVE STATUS \G'"

#  second slave

    priv_stmt_2='CREATE USER "mydb_slave_2_user"@"%" IDENTIFIED BY "mydb_slave_pwd"; GRANT REPLICATION SLAVE ON *.* TO "mydb_slave_2_user"@"%"; FLUSH PRIVILEGES;'
    docker exec mysql_master sh -c "export MYSQL_PWD=111; mysql -u root -e '$priv_stmt_2'"

    until docker-compose exec mysql_slave_2 sh -c 'export MYSQL_PWD=111; mysql -u root -e ";"'
    do
        echo "Waiting for mysql_slave database connection..."
        sleep 4
    done

    MS_STATUS=`docker exec mysql_master sh -c 'export MYSQL_PWD=111; mysql -u root -e "SHOW MASTER STATUS"'`
    CURRENT_LOG=`echo $MS_STATUS | awk '{print $6}'`
    CURRENT_POS=`echo $MS_STATUS | awk '{print $7}'`

    start_slave_stmt_2="CHANGE MASTER TO MASTER_HOST='mysql_master',MASTER_USER='mydb_slave_2_user',MASTER_PASSWORD='mydb_slave_pwd',MASTER_LOG_FILE='$CURRENT_LOG',MASTER_LOG_POS=$CURRENT_POS,GET_MASTER_PUBLIC_KEY=1; START SLAVE;"
    start_slave_cmd_2='export MYSQL_PWD=111; mysql -u root -e "'
    start_slave_cmd_2+="$start_slave_stmt_2"
    start_slave_cmd_2+='"'
    docker exec mysql_slave_2 sh -c "$start_slave_cmd_2"

    docker exec mysql_slave_2 sh -c "export MYSQL_PWD=111; mysql -u root -e 'SHOW SLAVE STATUS \G'"

}
# -----------------

{ [ "$#" -gt 0 ] && [ "$(type -t "$1")" != "function" ];} && { docker-compose "$@" || true; } || "${@:-help}"
